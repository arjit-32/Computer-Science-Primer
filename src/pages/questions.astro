---
import questions from '../data/questions.json';
import Base from '@/layouts/Base.astro';

// Extract unique tags from questions
const allTags = questions.reduce((tags, question) => {
  question.tags.forEach(tag => tags.add(tag));
  return tags;
}, new Set());

const uniqueTags = Array.from(allTags);
---


<Base>
<div class="min-h-screen bg-gray-50 py-8 px-4 sm:px-6 lg:px-8">
  <div class="max-w-7xl mx-auto">
    <h1 class="text-4xl font-bold text-gray-900 mb-8 text-center">Interview Questions</h1>
    
    <!-- Dynamic Filter Buttons -->
    <div class="flex flex-wrap gap-4 justify-center mb-8">
      <button 
        class="filter-btn px-4 py-2 rounded-lg bg-blue-500 text-white hover:bg-blue-600 transition-colors"
        onclick="filterQuestions('')"
        data-tag="">
        All
      </button>
      {uniqueTags.map((tag) => (
        <button 
          class="filter-btn px-4 py-2 rounded-lg bg-blue-500 text-white hover:bg-blue-600 transition-colors capitalize"
          onclick={`filterQuestions('${tag}')`}
          data-tag={tag}>
          {tag}
        </button>
      ))}
    </div>

    <!-- Questions List -->
    <div class="grid gap-6 md:grid-cols-2 lg:grid-cols-3">
      {questions.map((question) => (
        <div 
          class="question-card bg-white rounded-xl shadow-md overflow-hidden transition-all duration-200 hover:shadow-lg"
          data-tags={question.tags.join(',')}>
          <div class="p-6">
            <h2 class="text-xl font-semibold text-gray-900 mb-4">{question.question}</h2>
            
            <!-- Answer Section -->
            <div class="space-y-3 text-gray-600">
              {question.answer.map((line) => (
                <p>{line}</p>
              ))}
            </div>
            
            <!-- Code Section -->
            {question.code && (
              <div class="mt-4">
                <pre class="bg-gray-50 rounded-lg p-4 overflow-x-auto">
                  <code class="text-sm text-gray-800">{question.code}</code>
                </pre>
              </div>
            )}
            
            <!-- Image Section -->
            {question.images && question.images.length > 0 && (
              <div class="mt-4 grid gap-4">
                {question.images.map((img) => (
                  <img 
                    src={img} 
                    alt="Related to the question" 
                    class="rounded-lg w-full h-auto object-cover"
                  />
                ))}
              </div>
            )}

            <!-- Tags Display -->
            <div class="mt-4 flex flex-wrap gap-2">
              {question.tags.map((tag) => (
                <span class="px-2 py-1 bg-blue-100 text-blue-800 text-sm rounded-full capitalize">
                  {tag}
                </span>
              ))}
            </div>
          </div>
        </div>
      ))}
    </div>
  </div>
</div>

<script is:inline>
    function filterQuestions(tag) {
      const questions = document.querySelectorAll('.question-card');
      const buttons = document.querySelectorAll('.filter-btn');
      
      // Update active button state
      buttons.forEach(btn => {
        btn.classList.remove('bg-blue-600');
        btn.classList.add('bg-blue-500');
        if (btn.getAttribute('data-tag') === tag) {
          btn.classList.remove('bg-blue-500');
          btn.classList.add('bg-blue-600');
        }
      });
  
      // Filter questions
      questions.forEach((question) => {
        const tags = question.getAttribute('data-tags').split(',');
        if (!tag || tags.includes(tag)) {
          question.classList.remove('hidden');
          question.classList.add('block');
        } else {
          question.classList.remove('block');
          question.classList.add('hidden');
        }
      });
    }
  
    // Initialize with all questions shown
    document.addEventListener('DOMContentLoaded', () => {
      filterQuestions('');
    });
  </script>
</Base>