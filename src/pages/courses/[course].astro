---
import BlogCourses from "@/components/blog/BlogCourses.astro";
import BlogsSimple from "@/components/Blogs-Simple.astro";
import PageHeader from "@/components/PageHeader.astro";
import Shape from "@/components/Shape.astro";
import config from "@/config/config.json";
import Base from "@/layouts/Base.astro";
import { getSinglePage } from "@/lib/contentParser.astro";
import { getTaxonomy } from "@/lib/taxonomyParser.astro";
import taxonomyFilter from "@/lib/utils/taxonomyFilter";
import { slugify, humanize } from "@/lib/utils/textConverter";
import courseInfo from "@/data/course-info.json";

export async function getStaticPaths() {
  const courses = await getTaxonomy(
    config.settings.blog_folder,
    "courses",
  );
  return courses.map((item) => {
    const course = slugify(item);
    return {
      params: { course },
      props: {
        item,
      },
    };
  });
}

const { course } = Astro.params;
const { item } = Astro.props;

const posts = await getSinglePage(config.settings.blog_folder);
const filterByTags = taxonomyFilter(posts, "courses", course);
const page_data = {
  index_title: "Courses",
  slug: item,
};

const courseData = courseInfo[course];


---

<Base title={course as string}>
  <Shape />
  
  <section class="page-hero pb-8 pt-16">
    <div class="container">
      <div class="page-hero-content mx-auto max-w-[883px] text-center">
        <h1 class="h2 mb-14 text-center">
          <span class="text-white bg-[#fb7299] px-3">{courseData.title}</span> 
        </h1>
        <p>{courseData.description}</p>
      </div>
    </div>
  </section>
  <section class="section">
    <div class="container">
      <!-- <BlogCourses courses={courses} /> -->
      <!-- <BlogsSimple posts={filterByTags} /> -->
      <div class="row">
        {courseData.navbar.map((item: any, index: number) => (
          <div class="mb-4">
            <button
              class="w-full text-left bg-[#fb7299] text-white p-3 rounded-md font-semibold"
            >
              {item.subheading}
            </button>
            <div id={`dropdown-${index}`} class=" mt-2 bg-gray-100 rounded-md p-2">
              {item.link.map((link: any) => (
                link.type === "youtube" ? 
                <a href={link.url} target="_blank" class="block text-blue-500 hover:underline mb-2">
                  {link.title}
                </a> 
                : 
                <a href={"/blog/" + link.url} class="block text-blue-500 hover:underline mb-2">
                  {link.title}
                </a>
              ))}
            </div>
          </div>
        ))}
      </div>
    </div>
  </section>
</Base>
